Q1. What is java and why java is platform independent ?
=>  Java is high level programming language with different features like OOP, Platform independency etc. so what do we mean by high level language, it means that language in which we can write programs in languages we can speak like English etc. java is partially object oriented  platform independent language found by sun micro-studios  which is now owned by oracle company  by James Gosling. 
Planform Independent :
So what do we mean by platform independent is that the language which can run on any platform like Windows ,mac-os, Linux etc. 
In java, first code is converted into byte code which Is represented by .class file and that byte code can run on any machine regardless of platform (as long as JDK is installed on that device ) this make java WORA (Write Once Run Anywhere) language . The JDK is platform dependent is different for different platform it takes your byte code which is sent to JVM which give runtime environment to your code.
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Q2.Java Feature :
Java has many features some of them are as follows:
1.java is simple: simple means it can written in native languages or human readable language .
2.Secure: Java is secure because it removes use of explicit pointer  and have strong memory management system which makes it safer then native languages like c and c++.
3.Fast: Java first interprets the code and then complies the code which makes it faster then interpreted languages but it still slower then native or complied languages.
4.Robust:Java is called robust language because it has very strong memory management system and also it removes the use of Explicit pointers which makes it robust.
5.Portable: Java Follows WORA rule which means that you have to write code once and then when you get .class file you can import on to any machine which makes java portable language.
6.Object-Oriented: Java is object oriented because It follows concepts of class and object and also it follows fours concept of OOP which are 1)Encapsulation 2)Abstraction 3)Inheritance 4) Polymorphism .but it is not completely Object-Oriented because it supports the use of primitives which makes it partially object oriented.
7.Architectuer neutral: in java the size of primitives' are fixed irrespective to the operating system it is working on that's why java is architecture neutral. Example : the size
        of int in java is always 32 bit and for long it will be always 64 bit.
        
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Q3.What is JVM:
=> JVM Stands for Java Virtual machine , it is part of Java Development Kit which helps us to run our java code on any machine irrespective of our platform.
   JDK consist of Java Runtime Environment (JRE) and essential components like complier ,interpreted etc.
   JRE consist of Java Victual Machine (JVM) and necessary classes and libraries.
   Java virtual machine is an virtual OS which helps us to run java program on any platform. it is not physically present like JDK or JVM but it is virtual interpretation of JDK in
   form of JVM for execution of java program
   importance : JVM give the java the power of platform independency as it allows to run on any machine irrespective of its platform and it also gives it functionality like dynamic
                classloding in which loading of class is performed during runtime rather then compile time. JVM also has garbage collection system which removes unused or 
                dereferenced object from memory area which makes it more memory efficient 
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------                         
    
Q4:  1)When you first write a code and then you compile it using 'javac' command the .class file you get is the byte code generated by java complier .    
     2)Byte code plays very important role in java by making it portable 
     3)you have to write program once and when the byte file is generated you can run that byte code on any machine irrespective of its platform like windows , mac, Linux 
     4)this helps java to achieve its platform independent property or feature 
     5)byte code is intermediate on simple code and machine code. it is transformed into machine code using JVM

-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------                             

Q5: JVM Architecture:
 There are there are 5 main components of JVM : 
    Class loader subsystem
    Runtime Data area
    Execution Engine
    Java Native Interface
    Java Native Library
     JVM is Divided into sub-system :
  1) ClassLoader Subsystem:
    A] Loading =>
                ClassLoader subsystem is used to load essential classes for the execution of java program following are the classloders responsible for loading of classes and files  
                i)Bootstrap ClassLoader: It is used to load rt.jar file( Runtime java file) which contains essential libraries like java. Lang for the execution of java program.                     
                ii)Extension ClassLoader: This is child of bootstrap classloader used to lode extensions from /lib/ext file 
                iii)Application ClassLoader: This is child of Extension classloader which is used to load Application level class file from path /bin folder 
                The classloding is done in hierarchical order.
    B] Linking=> 
                Linking consist of three processes 
                1)Verify : in this step we check that the generated byte code is valid or not
                2)Prepare : in this step we allocate memory for static variables 
                3)Resolve : in this step we replace  Symbolical reference whit actual value or method (de-referencing) 
                
    C] Initialization=> In this step the Static variables are initialized with there respective values and the code inside the static block is get executed .
    
 2) Runtime Data area:
     Runtime data area stores the data while execution of java program. following are the sub areas of runtime data area 
    A]Method Area: Stores class level data like static variables , only one method area per JVM hence not thread safe.
    B]Heap Area: Stores Object ,instance variables ,arrays etc., only one Heap area per JVM hence not thread safe.
    c]Stack Area: For every thread there is different stack area , it stores methods and local variables , it is thread safe ,when method is called it is get stored in stack  
                 generating a stack frame 
    D]PC Registrar: For every thread there is different PC registrar, it holds memory address of current executing instructions and gets updated with next when the current execution 
                    is done.
    E]Native method area: For every thread there is different Native method area, it stores information related to native method , Native methods are methods written in native code 
                          which are useful to perform system level executions that we are not able to perform using only java.
                          
  3)Execution Engine:
   A]Interpreter : it interprets the code line by line form byte code to machine code or native code but its disadvantage is that even if code is repeated it will again interprets 
                   it line by line , to overcome this dis-advantage in java 1.1 JIT complier was introduced 
   B]JIT Complier: JIT Stands for Just in time compiler, when it finds repeated code it will convert whole code into  machine code, the process of finding repeated code or method is 
                   done by profiler using hotspot method. 
   C]Garbage collector: It remove unused objects and variable  or other thing from memory which make it memory efficient it clear memory by using System.gc(); method
   
   4]Java Native Interface: it provide connection between java native library for execution of java program 
   
   5]Java Native Libraries : it contains important native libraries and file required for native method execution 
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------                              
    
Q6: 
    The execution Engine in JVM is used to convert byte code to machine code .It has several components like Interpreter, JIT compiler, garbage collector for effective conversion of
    byte code to machine code. following is the architecture of execution engine.
    Execution Engine:
   A]Interpreter : it interprets the code line by line form byte code to machine code or native code but its disadvantage is that even if code is repeated it will again interprets 
                   it line by line , to overcome this dis-advantage in java 1.1 JIT complier was introduced 
   B]JIT Complier: JIT Stands for Just in time compiler, when it finds repeated code it will convert whole code into  machine code, the process of finding repeated code or method is 
                   done by profiler using hotspot method. 
   C]Garbage collector: It remove unused objects and variable  or other thing from memory which make it memory efficient it clear memory by using System.gc(); method
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------                              
    
Q7:
  Difference :
  Interpreter: it interprets the code line by line form byte code to machine code or native code but its disadvantage is that even if code is repeated it will again interprets 
                it line by line 
  JIT Complier: when it finds repeated code it will convert whole code into  machine code
  
  optimization:
  1)IN java version 1.1 they introduced the JTI compiler to improve the speed of java code execution 
  2)Execution engine has components like garbage collector It remove unused objects and variable  or other thing from memory which make it memory efficient it clear memory by using  
  System.gc(); method

-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------                              
    
Q8:
 When first java code is complied it gets converted in byte code which is represented by .class file and when we sent that file to jvm for further execution it gets converted in to 
 machine code, machine code consist of 0 and 1 while byte code in intermidate of machine code and simple language code.
 
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------                                  
Q9 
 it provide connection between java native library for execution of java program   
    
 ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Q10
     A]Method Area: Stores class level data like static variables , only one method area per JVM hence not thread safe.
    B]Heap Area: Stores Object ,instance variables ,arrays etc., only one Heap area per JVM hence not thread safe.
    c]Stack Area: For every thread there is different stack area , it stores methods and local variables , it is thread safe ,when method is called it is get stored in stack  
                 generating a stack frame 
    D]PC Registrar: For every thread there is different PC registrar, it holds memory address of current executing instructions and gets updated with next when the current execution 
                    is done.
    E]Native method area: For every thread there is different Native method area, it stores information related to native method , Native methods are methods written in native code 
                          which are useful to perform system level executions that we are not able to perform using only java.
                          
____________________________________________________________________________________________------------------------_________________________________________________________________

Q1: output: 2
Q2: output:11
           11
           12
Q3: output: Hello World
Q4: output:102
Q5:output :64+63-64-64=-1

____________________________________________________________________________________________------------------------_________________________________________________________________
    
Program Number 1:

import java.util.Scanner;
class Question1{
  public static void main (String args[]){
    Scanner s =new Scanner(System.in);
    System.out.println("Enter Two Numbers:");
    double a=s.nextDouble();
    double b= s.nextDouble();
    System.out.println("Enter the opration you want to perform ( + - * / ):");
    char ch=s.next().charAt(0);
    switch(ch){

     case '+':System.out.println("The sum is :" +(a+b));
              break;
     case '-':System.out.println("The sub is :" +(a-b));
              break;
     case '*':System.out.println("The multi is :" +(a*b));
              break;
     case '/':System.out.println("The div is :" +(a/b));
              break;
     case '%':System.out.println("The mod is :" +(a%b));
              break;
     default:System.out.println("Invalid Input!" );
             break;
    };
  }

}

Output :
C:\Users\HP\Desktop\Assignments\test>java Question1
Enter Two Numbers:
5
6
Enter the opration you want to perform ( + - * / ):
+
The sum is :11.0

---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------   
    
Program Number 2:
import java.util.Scanner;
class Question2{
  public static void main (String args[]){
    Scanner s =new Scanner(System.in);
    System.out.println("Enter Marks obtianed:");
   int a=s.nextInt();
   if(a>=90){
     System.out.println("YOU obtained A gread.");
   }else if(a>90&& a>=80){
      System.out.println("YOU obtained B gread.");
    }else if(a>80&&a>=70){
       System.out.println("YOU obtained C gread.");
    }else {
       System.out.println("YOU obtained D gread.");
    }
  }
}

Output:

C:\Users\HP\Desktop\Assignments\test>javac Question2.java

C:\Users\HP\Desktop\Assignments\test>java Question2
Enter Marks obtianed:
50
YOU obtained D gread.

C:\Users\HP\Desktop\Assignments\test>java Question2
Enter Marks obtianed:
90
YOU obtained A gread.    
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------       
    
Program 3:

import java.util.Scanner;
class Question3{
  public static void main (String args[]){
    Scanner s =new Scanner(System.in);
    System.out.println("Enter a Nubmer"); 
   	int a=s.nextInt();
 	int n=0,max=-1;
        while(a!=0){
	   n=a%10;
	  if(n>max){
		max=n;
            }
	  a/=10;
	}
    	System.out.println("The max digit of given Number is : "+ max);
   
  }
}

Output:
C:\Users\HP\Desktop\Assignments\test>type nul>Question3.java

C:\Users\HP\Desktop\Assignments\test>javac Question3.java

C:\Users\HP\Desktop\Assignments\test>java Question3
Enter a Nubmer
159
The max digit of given Number is : 9

C:\Users\HP\Desktop\Assignments\test>java Question3
Enter a Nubmer
195623
The max digit of given Number is : 9

C:\Users\HP\Desktop\Assignments\test>java Question3
Enter a Nubmer
123654
The max digit of given Number is : 6
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------       
program 4:
import java.util.Scanner;
class Question4{
  public static void main (String args[]){
    Scanner s =new Scanner(System.in);
    System.out.println("Is Driver Married (true/false)"); 
    boolean m=s.nextBoolean(),male,female;
    int age;
   	 if(m){
         System.out.println("The Driver will get his insurance");
   	 }else{
	 System.out.println("Is driver Male(true/false)");
          male=s.nextBoolean();
          if(male){
           System.out.println("Enter the age of male Driver");
	   age=s.nextInt();
              if(age>30){
			 System.out.println("The Driver will get his insurance");
			}else{
			 System.out.println("The Driver will NOT get his insurance");
			}
	        }else{
		   System.out.println("Enter the age of female Driver");
	           age=s.nextInt();
		      if(age>25){
			 System.out.println("The Driver will get his insurance");
			}else{
			 System.out.println("The Driver will NOT get his insurance");
			}
		      }
	    }	
   
  }
}

Output:
C:\Users\HP\Desktop\Assignments\test>java Question4
Is Driver Married (true/false)
true
The Driver will get his insurance

C:\Users\HP\Desktop\Assignments\test>java Question4
Is Driver Married (true/false)
false
Is driver Male(true/false)
false
Enter the age of female Driver
30
The Driver will get his insurance

C:\Users\HP\Desktop\Assignments\test>java Question4
Is Driver Married (true/false)
false
Is driver Male(true/false)
true
Enter the age of male Driver
25
The Driver will NOT get his insurance
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------       
program 5:

import java.util.Scanner;
class Question5{
  public static void main (String args[]){
    Scanner s =new Scanner(System.in);
    System.out.println("Enter a Nubmer");
 
   	int a=s.nextInt();
 	int n=0;
    System.out.println("The even numbers from give numbers are as follows:");
        while(a!=0){
	   n=a%10;
	  if(n%2==0){
		System.out.print(n+" ");
            }
	  a/=10;
	}
    	
   }
  }
  
Output:
C:\Users\HP\Desktop\Assignments\test>java Question5
Enter a Nubmer
123456789
The even numbers from give numbers are as follows:
8 6 4 2
C:\Users\HP\Desktop\Assignments\test>java Question5
Enter a Nubmer
221144
The even numbers from give numbers are as follows:
4 4 2 2
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------       

program 6:
import java.util.Scanner;
class Question6{
  public static void main (String args[]){
    Scanner s =new Scanner(System.in);
    System.out.println("Enter base and height of tringle");
   	double b=s.nextDouble();
 	double h=s.nextDouble();
  	double ans=0.5*(b*h);
    System.out.println("The area of given tringle is "+ans);
        
    	
   }
  }
  
Output:
C:\Users\HP\Desktop\Assignments\test>java Question6
Enter base and height of tringle
15
20
The area of given tringle is 150.0

C:\Users\HP\Desktop\Assignments\test>java Question6
Enter base and height of tringle
12
35
The area of given tringle is 210.0
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------     

program 7:
import java.util.Scanner;
class Question7{
  public static void main (String args[]){
    Scanner s =new Scanner(System.in);
    System.out.println("Enter the Nubmber:");
   	int a=s.nextInt();
        if(a%2==0&&a%3==0){
	 System.out.println("The Number is divisible by both 2 and 3");
	}else{
	   System.out.println("The Number is NOT divisible by both 2 and 3");
	}  	
   }
  }

Output:
Enter the Nubmber:
45
The Number is NOT divisible by both 2 and 3

C:\Users\HP\Desktop\Assignments\test>java Question7
Enter the Nubmber:
12
The Number is divisible by both 2 and 3

-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------     

program 8:

import java.util.Scanner;
class Question8{
  public static void main (String args[]){
    Scanner s =new Scanner(System.in);
    System.out.println("Enter your age:");
   	int a=s.nextInt();
        if(a>=18){
	 System.out.println("You are eligible to vote");
	}else{
	   System.out.println("You are NOT eligible to vote");
	}  	
   }
  }

Output:
C:\Users\HP\Desktop\Assignments\test>java Question8
Enter your age:
50
You are eligible to vote

C:\Users\HP\Desktop\Assignments\test>java Question8
Enter your age:
10
You are NOT eligible to vote

C:\Users\HP\Desktop\Assignments\test>java Question8
Enter your age:
18
You are eligible to vote

-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------     
program 9;
import java.util.Scanner;
class Question9{
  public static void main (String args[]){
    Scanner s =new Scanner(System.in);
    System.out.println("Enter a Nubmer"); 
   	int a=s.nextInt();
        int b=a;
 	int n=0,num=0;
        while(a!=0){
	   n=a%10;
	   num=num*10+n;
	  a/=10;
	}
        if(num==b){
	System.out.println("The Number is Palindrom");
	}else{
	System.out.println("The Number is NOT Palindrom");
	}
    	
   
  }
}

output:
C:\Users\HP\Desktop\Assignments\test>java Question9
Enter a Nubmer
121
The Number is Palindrom

C:\Users\HP\Desktop\Assignments\test>java Question9
Enter a Nubmer
123
The Number is NOT Palindrom
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------     

program 10:

import java.util.Scanner;
class Question10{
  public static void main (String args[]){
    Scanner s =new Scanner(System.in);
    System.out.println("Enter three numbers:"); 
   	int a=s.nextInt();
	int b=s.nextInt();
	int c=s.nextInt();
       
 	int max=a;
	 if(b>max){
  	max=b;
	}
	 if(c>max){
  	max=c;
	}
	System.out.println("The maximum of three number is :"+max);
    	
   
  }
}

output:
C:\Users\HP\Desktop\Assignments\test>java Question10
Enter three numbers:
1
2
3
The maximum of three number is :3

C:\Users\HP\Desktop\Assignments\test>java Question10
Enter three numbers:
99
66
33
The maximum of three number is :99

C:\Users\HP\Desktop\Assignments\test>java Question10
Enter three numbers:
11
98
63
The maximum of three number is :98


















